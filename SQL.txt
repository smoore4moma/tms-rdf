
***** NOTES *****

Follow these steps to get started.  Note the database names are TMS-API and TMSThes-API which are daily snapshots of production.

***** STEP 1 *****

-- Create this function in SQL Server.  You're going to need it.

-- RDF conventions are basically lower case with no spaces
-- This function concatenates the DisplayName field and removes invalid charaters

CREATE Function [dbo].[RemoveNonAlphaCharacters](@Temp VarChar(255))
Returns VarChar(255)
AS
Begin

    Declare @KeepValues as varchar(255)
    Set @KeepValues = '%[^a-z]%'
    While PatIndex(@KeepValues, @Temp) > 0
        Set @Temp = Stuff(@Temp, PatIndex(@KeepValues, @Temp), 1, '')

    Return @Temp
End

***** STEP 2 *****

-- Create this view for the demo.

 -- SourceTermID is the TGN number that you can reference here:
 -- http://vocab.getty.edu/tgn/{SourceTermID} (for example)
 -- This allows you to create a reference uri for the place name
 -- 1=EN, ThesaurusBaseID for TGN is 5.  Change accordingly.
 -- Query is limited to 3 ThesXrefTypeIDs which are Terms in TMSThes
 -- You would need to create your own Terms and change the View.
 -- Use GROUP BY because you can have multiple HistEvents

CREATE VIEW [dbo].[vwTmsRdf] AS
SELECT C.ConstituentID AS ArtistID, C.DisplayName, LOWER(dbo.RemoveNonAlphaCharacters(C.DisplayName)) AS RdfName,
	ArtistPredicate = CASE WHEN TXT.ThesXrefTypeID = 130 THEN 'livedIn'
	WHEN TXT.ThesXrefTypeID = 131 THEN 'activeIn'
	WHEN TXT.ThesXrefTypeID = 134 THEN 'educatedIn'
	END,
    T.Term,TM.SourceTermID AS TGN
FROM  HistEvents H
  INNER JOIN ThesXrefs TX ON H.HistEventID = TX.ID 
  INNER JOIN ThesXrefTypes TXT ON TX.ThesXrefTypeID = TXT.ThesXrefTypeID 
  INNER JOIN ConXrefs X ON H.HistEventID = X.ID 
  INNER JOIN ConXrefDetails CXD ON X.ConXrefID = CXD.ConXrefID
  INNER JOIN Constituents C ON CXD.ConstituentID = C.ConstituentID
  INNER JOIN Roles R On X.RoleID = R.RoleID
  LEFT OUTER JOIN [TMSThes-API].dbo.Terms T ON TX.TermID = T.TermID
  LEFT OUTER JOIN [TMSThes-API].dbo.TermMaster TM On T.TermMasterID = TM.TermMasterID
  WHERE T.TermTypeID = 1 AND T.LanguageID = 1 AND TM.ThesaurusBaseID = 5  
  AND R.RoleTypeID = 1 AND CXD.Unmasked = 1 
  AND TXT.ThesXrefTableID = 346 AND TXT.TableID = 187
  AND TXT.ThesXrefTypeID IN (130, 131, 134)
GROUP BY C.ConstituentID, C.DisplayName, TXT.ThesXrefTypeID, T.Term,TM.SourceTermID 


***** STEP 3 *****

  -- Add RDF resources

  -- Artists (creators)    
  
  SELECT TOP 100 'RDFResource ' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + ' = new RDFResource("http://moma.org/artists/' + CAST([ArtistID] AS VARCHAR(10)) + '");'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL
  GROUP BY [DisplayName], [ArtistID]
  
  -- Locations (TGN)

  SELECT TOP 100 'RDFResource ' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + ' = new RDFResource("http://vocab.getty.edu/tgn/' + CAST(TGN AS VARCHAR(20)) + '");'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL
  GROUP BY Term, TGN
  
  -- Artists (creators): plain literal name
        
  SELECT TOP 100 'RDFPlainLiteral ' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + 'Name = new RDFPlainLiteral("' + DisplayName + '");'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL
  GROUP BY [DisplayName]
  
  -- Locations (TGN): plain literal name
         
  SELECT TOP 100 'RDFPlainLiteral ' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + 'Name = new RDFPlainLiteral("' + Term + '");'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL
  GROUP BY Term 
  
  -- Create triple resources

  SELECT TOP 100 'RDFTriple ' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_type_creator = new RDFTriple(' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + ', type, creator);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY [DisplayName]
  
  SELECT TOP 100 'RDFTriple ' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + '_type_tgn = new RDFTriple(' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + ', type, tgn);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY Term  
  
  SELECT TOP 100 'RDFTriple ' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_name_'+ LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) +'Name = new RDFTriple(' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + ', name, '+ LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) +'Name);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY [DisplayName]
  
  SELECT TOP 100 'RDFTriple ' + LOWER(dbo.RemoveNonAlphaCharacters(term)) + '_name_'+ LOWER(dbo.RemoveNonAlphaCharacters(term)) +'Name = new RDFTriple(' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + ', name, '+ LOWER(dbo.RemoveNonAlphaCharacters(term)) +'Name);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY Term
 
 
  SELECT TOP 100 'RDFTriple ' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_' + ArtistPredicate + '_' + LOWER(dbo.RemoveNonAlphaCharacters(term)) + ' = new RDFTriple(' + LOWER(dbo.RemoveNonAlphaCharacters(DisplayName)) + ', ' + ArtistPredicate + ', '+ LOWER(dbo.RemoveNonAlphaCharacters(term)) + ');'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY DisplayName,ArtistPredicate,Term 
  
  -- Add triples
  -- Need to create a graph called m_graph

  SELECT TOP 100 'm_graph.AddTriple(' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_type_creator);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY DisplayName
  UNION
  SELECT TOP 100 'm_graph.AddTriple(' + LOWER(dbo.RemoveNonAlphaCharacters(Term)) + '_type_tgn);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY Term  
  UNION
  SELECT TOP 100 'm_graph.AddTriple(' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_name_'+ LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) +'Name);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY DisplayName
  UNION
  SELECT TOP 100 'm_graph.AddTriple(' + LOWER(dbo.RemoveNonAlphaCharacters(term)) + '_name_'+ LOWER(dbo.RemoveNonAlphaCharacters(term)) +'Name);'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY Term
  UNION
  SELECT TOP 100 'm_graph.AddTriple(' + LOWER(dbo.RemoveNonAlphaCharacters([DisplayName])) + '_' + ArtistPredicate + '_' + LOWER(dbo.RemoveNonAlphaCharacters(term)) + ');'
  FROM [TMS-API].[dbo].[vwTmsRdf]
  WHERE ArtistPredicate IS NOT NULL AND Term IS NOT NULL 
  GROUP BY DisplayName,ArtistPredicate,Term 
  

  */